trigger:
  batch: true
  branches:
    include:
      - dev
  paths:
    exclude:
      - README.md


variables:
  jsonFile: google-creds.json
  jsonLocation: /site/wwwroot

  agentOS: ubuntu-latest

  azKeyVault: key-vault-greencity
  jsonSecret: google-credentials

  artifactName: drop
  userRepoName: chat
  onbootJarName: app.jar

  azureSub: GreenCity
  resourceGroup: GreenCity
  chatServiceName: greencity-chat

stages:
  - stage: Build
    jobs:
      - job: Build
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: Maven@3
            displayName: Maven package
            inputs:
              mavenPomFile: 'pom.xml'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.11'
              mavenVersionOption: 'Default'
              options: '-Dmaven.test.skip=true'
              # mavenOptions: '-Dmaven.test.skip=true'

          #          - script: mv core/target/*.jar core/target/app.jar
          #            displayName: Rename core jar to app
          #
          #          - script: mv email/target/*.jar email/target/app.jar
          #            displayName: Rename email jar to app

          - task: CopyFiles@2
            displayName: Copy Files
            inputs:
              SourceFolder: $(system.defaultworkingdirectory)
              Contents: '/target/*.jar'
              TargetFolder: '$(build.artifactstagingdirectory)'

          - task: PublishBuildArtifacts@1
            displayName: Publish Artifact
            inputs:
              PathtoPublish: '$(build.artifactstagingdirectory)'
              artifactName: '$(artifactName)'

  - stage: deploy
    jobs:
      - deployment: deploy
        displayName: Deploy GreenCityChat app service
        pool:
          vmImage: $(agentOS)
        environment: 'prod'
        strategy:
          runOnce:
            deploy:
              steps:
                - download: none

                - task: DownloadBuildArtifacts@0
                  inputs:
                    buildType: 'current'
                    downloadType: 'single'
                    artifactName: '$(artifactName)'
                    downloadPath: '$(System.ArtifactsDirectory)'

                - task: AzureRmWebAppDeployment@4
                  inputs:
                    azureSubscription: '$(azureSub)'
                    appType: 'webAppLinux'
                    WebAppName: '$(userServiceName)'
                    deployToSlotOrASE: true
                    ResourceGroupName: '$(resourceGroup)'
                    packageForLinux: '$(System.ArtifactsDirectory)/$(artifactName)/$(userRepoName)/target/$(onbootJarName)'


